---
- name: Preflight to set up machine specific variables
  hosts: "mycluster"
  gather_facts: false
  tasks:

    - fail:
      when: suffix is not defined or suffix == ""


- name: Provision a set of hosts in the Catalyst Cloud
  hosts: localhost
  gather_facts: false
  vars:
    # optional suffix to namespace resources
    suffix: ""
    host_set: "{{ groups.mycluster | unique | list }}"
    public_hosts: "{{ groups.bastion | unique | list }}"
    # change if required or override at runtime using --extra-vars

    security_groups: "{{ host_set | map('extract', hostvars, 'security_groups') | sum(start=[]) | unique | list }}"

    security_group_names: "{{ security_groups | map(attribute='group') | unique | list }}"

  roles:
    - role: os-provision
  post_tasks:

    - name: Remove floating ip from known hosts
      known_hosts:
        name: "{{ item }}"
        state: absent
      with_items: "{{ host_set }}"

    - name: "Add cluster to local ~/.ssh/config"
      blockinfile:
        dest: "{{ lookup('env', 'HOME') }}/.ssh/config"
        insertbefore: BOF
        block: |
          Host {{ item }}
              User {{ ssh_user }}
              StrictHostKeyChecking no
              {{ hostvars[item].ssh_proxy_command }}
          Host {{ hostvars[item].ansible_host }}
              Hostname {{ item }}
              User {{ ssh_user }}
              StrictHostKeyChecking no
              {{ hostvars[item].ssh_proxy_command }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
      with_items: "{{ groups.mycluster }}"

    - name: "Add host to /etc/hosts"
      become: yes
      blockinfile:
        dest: /etc/hosts
        insertafter: EOF
        block: |
          {{ hostvars[item].ansible_host }} {{ item }}
        marker: "# {mark} ANSIBLE MANAGED BLOCK for {{ item }}"
      with_items: "{{ groups.mycluster }}"

    - wait_for:
        host: "{{ item }}"
        port: 22
      with_items: "{{ public_hosts }}"


- name: Basic host setup
  hosts: bastion
  become: true
  gather_facts: false
  vars:
    host_set: "{{ groups.mycluster }}"
  roles:
    - role: common

- name: Basic host setup
  hosts: mycluster:!bastion
  become: true
  gather_facts: false
  vars:
    host_set: "{{ groups.mycluster }}"
  roles:
    - role: common


- name: Extra set up for web demo
  hosts: "loadbalancer"
  become: true
  gather_facts: false
  tasks:

    - name: "Add fake domain to /etc/hosts"
      delegate_to: localhost
      become: yes
      blockinfile:
        dest: /etc/hosts
        insertafter: EOF
        block: |
          {{ ansible_host }} my-app.cat
        marker: "# {mark} ANSIBLE MANAGED BLOCK for my-app.cat"

